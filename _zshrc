#prompt
PS1="[@${HOST%%.*} %1~]%(!.#.$)"
#右側まで入力が来たら右プロンプトを消す
setopt transient_rprompt
setopt prompt_subst
bindkey -e
#ビープ音鳴らさない
setopt nobeep
#改行内出力をプロンプトで上書きしない
unsetopt promptcr

#履歴
HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=100000
setopt hist_ignore_dups
setopt share_history
setopt hist_ignore_space
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end 

#環境変数
export LANG=ja_JP.UTF-8
export EDITOR=vim

#補完
autoload -U compinit
compinit 

#cdの履歴を表示
setopt autopushd
#同じディレクトリを履歴に追加しない
setopt pushd_ignore_dups
#自動的にディレクトリ移動
setopt auto_cd
#リストを詰めて表示
setopt list_packed
#補完一覧ファイル種別表示
setopt list_types

#allow tab completion in the middle of a word
setopt COMPLETE_IN_WORD

if [ -f ~/.zsh/auto-fu.zsh/auto-fu.zsh ]; then
  source ~/.zsh/auto-fu.zsh/auto-fu.zsh
  function zle-line-init () {
  auto-fu-init
}
zle -N zle-line-init
zstyle ':completion:*' completer _oldlist _complete
fi

#alias
if [ -x ~/source/vim73/src/vim ]; then
  alias vim=~/source/vim73/src/vim
  alias vi=~/source/vim73/src/vim
fi

if [ -x /usr/bin/git ]; then
  alias git=/usr/bin/git
fi

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'

#Git関連
export GIT_PAGER='less -r -I'
alias gco="git checkout"
alias gst="git status"
alias gci="git commit"
alias gdi="git diff"
alias gdic="git diff -b --color-words"
alias gbr="git branch"
alias glog="git log --graph --date-order -C -M --pretty=format:\"<%h> %cd [%an] %s\""

#git completion
#source ~/dotfiles/git-completion.bash
#autoload bashcompinit
#bashcompinit

## GNU grepがあったら優先して使う。
#if type ggrep > /dev/null 2>&1; then
#    alias grep=ggrep
#fi
## デフォルトオプションの設定
#export GREP_OPTIONS
### バイナリファイルにはマッチさせない。
#GREP_OPTIONS="--binary-files=without-match"
### grep対象としてディレクトリを指定したらディレクトリ内を再帰的にgrepする。
#GREP_OPTIONS="--directories=recurse $GREP_OPTIONS"
### 拡張子が.tmpのファイルは無視する。
#GREP_OPTIONS="--exclude=\*.tmp $GREP_OPTIONS"
## 管理用ディレクトリを無視する。
#if grep --help | grep -q -- --exclude-dir; then
#    GREP_OPTIONS="--exclude-dir=.svn $GREP_OPTIONS"
#    GREP_OPTIONS="--exclude-dir=.git $GREP_OPTIONS"
#    GREP_OPTIONS="--exclude-dir=.deps $GREP_OPTIONS"
#    GREP_OPTIONS="--exclude-dir=.libs $GREP_OPTIONS"
#fi
### 可能なら色を付ける。
#if grep --help | grep -q -- --color; then
#    GREP_OPTIONS="--color=auto $GREP_OPTIONS"
#fi

#ログイン時SSH-Agent起動してエージェントフォワードさせる
echo -n "ssh-agent: "
source ~/.ssh-agent-info
ssh-add -l >&/dev/null
if [ $? = 2 ] ; then
  echo -n "ssh-agent: restart...."
  ssh-agent >~/.ssh-agent-info
  source ~/.ssh-agent-info
fi
if ssh-add -l >&/dev/null ; then
  echo "ssh-agent: Identity is already stored."
else
  ssh-add
fi

#vcs_infoならリポジトリ名表示
autoload -Uz is-at-least
if is-at-least 4.3.7; then
  autoload -Uz vcs_info
  zstyle ':vcs_info:*' formats '(%s)-[%b]'
  zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
  precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
  }
  RPROMPT="%1(v|%F{green}%1v%f|)"
fi

#_Z_CMD=j
source ~/.zsh/z/z.sh
precmd() {
  _z --add "$(pwd -P)"
}
